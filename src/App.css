@import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap");
body {
  font-family: "Inter", sans-serif;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  overflow-x: hidden; /* Prevent horizontal scroll on small screens due to blob */
  scroll-behavior: smooth;
}
#root {
  /* CRITICAL FIX: Ensure #root fills the entire viewport */
  min-height: 100vh;
  width: 100vw; /* Make it 100% of viewport width */
  display: flex;
  flex-direction: column; /* Allow content to stack vertically */
  justify-content: flex-start; /* Align content to the top */
  align-items: center; /* Center horizontally */
  /* Add a background color to #root to see it fill the screen */
  background-color: #f0f2f5; /* Light background for the whole app */
}

/* The main App div (root of your React component) */
.App {
  /* CRITICAL FIX: Remove fixed max-width here if you want it to stretch */
  /* Instead of max-w-screen-xl, use w-full and responsive padding */
  width: 100%; /* Ensure it takes full width of its parent (#root) */
  /* Adjust padding to control spacing from screen edges */
  padding: 1rem; /* Default padding for smaller screens */

  /* Ensure it stretches vertically */
  min-height: 100vh; /* Or adjust based on content */

  /* Remove any conflicting `max-width` or `justify-content: center` if they are here */
  /* The flex properties from #root will handle centering */
}

/* Styles for the main dashboard card (the white rounded one) */
.main-dashboard-card {
  width: 100%; /* Ensure it takes full width of its parent's padding */
  max-width: 1600px; /* INCREASED MAX-WIDTH for very wide screens */
  /* If you want it to always be full screen, remove max-width entirely */
}

/* Styles for the grid within the dashboard card */
.dashboard-grid {
  display: grid;
  grid-template-columns: 1fr; /* Default to single column */
  gap: 1.5rem; /* Gap between grid items */
}

@media (min-width: 768px) {
  /* md breakpoint */
  .dashboard-grid {
    grid-template-columns: 2fr 1fr; /* Two columns: main content + sidebar */
  }
  .dashboard-main-column {
    grid-column: 1 / 2;
  }
  .dashboard-sidebar-column {
    grid-column: 2 / 3;
  }
}

@media (min-width: 1024px) {
  /* lg breakpoint */
  .dashboard-grid {
    grid-template-columns: 3fr 2fr; /* More flexible columns */
  }
  .dashboard-main-column {
    grid-column: 1 / 2;
  }
  .dashboard-sidebar-column {
    grid-column: 2 / 3;
  }
}

@media (min-width: 1400px) {
  /* xl breakpoint for very wide screens */
  .dashboard-grid {
    grid-template-columns: 4fr 2fr; /* Maximize horizontal space */
  }
}

/* Keyframes for blob animation */
@keyframes blob {
  0% {
    transform: translate(0px, 0px) scale(1);
  }
  33% {
    transform: translate(30px, -50px) scale(1.1);
  }
  66% {
    transform: translate(-20px, 20px) scale(0.9);
  }
  100% {
    transform: translate(0px, 0px) scale(1);
  }
}

/* Apply animation to elements with 'animate-blob' class */
.animate-blob {
  animation: blob 7s infinite cubic-bezier(0.6, 0.01, 0.3, 0.9);
}

/* Animation delay utility classes for staggered animations */
.animation-delay-2000 {
  animation-delay: 2s;
}
.animation-delay-4000 {
  animation-delay: 4s;
}

/* Ensure chart containers have flex-grow to fill space */
.chart-container {
  flex-grow: 1;
  display: flex; /* Make it a flex container for the canvas */
  justify-content: center;
  align-items: center;
}

/* Specific styling for the quote card to span columns */
.quote-card {
  /* This class is now applied in App.js directly */
  grid-column: span 1; /* Default for mobile */
}
@media (min-width: 768px) {
  .quote-card {
    grid-column: span 2; /* Span 2 columns on medium screens */
  }
}
@media (min-width: 1024px) {
  .quote-card {
    grid-column: span 1; /* Reset to 1 column on large screens if it's in a sidebar */
  }
}

/* Ensure the main bar chart spans correctly */
.bar-chart-card {
  grid-column: span 1; /* Default to 1 column */
}
@media (min-width: 768px) {
  .bar-chart-card {
    grid-column: span 2; /* Span 2 columns on medium screens */
  }
}
@media (min-width: 1024px) {
  .bar-chart-card {
    grid-column: span 3; /* Span 3 columns on large screens */
  }
}

/* NEW: Latest Todos List Container */
.latest-todos-list-container {
  max-height: 250px; /* Fixed height for scrollable list */
  overflow-y: auto;
  padding-right: 10px; /* Space for scrollbar */
}

/* Custom scrollbar for latest todos list */
.latest-todos-list-container::-webkit-scrollbar {
  width: 8px;
}
.latest-todos-list-container::-webkit-scrollbar-track {
  background: #e0e0e0;
  border-radius: 10px;
}
.latest-todos-list-container::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 10px;
}
.latest-todos-list-container::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* General card styling for consistency */
.bg-white {
  background-color: #ffffff;
}
.p-6 {
  padding: 1.5rem;
}
.rounded-2xl {
  border-radius: 1rem;
}
.shadow-lg {
  box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
}
.border {
  border-width: 1px;
}
.border-gray-100 {
  border-color: #f3f4f6;
}
.flex {
  display: flex;
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.text-center {
  text-align: center;
}
.transition-transform {
  transition-property: transform;
  transition-duration: 0.2s;
  transition-timing-function: ease-out;
}
.duration-200 {
  transition-duration: 0.2s;
}
.hover\:shadow-xl:hover {
  box-shadow: 0 20px 25px rgba(0, 0, 0, 0.15);
}
.hover\:scale-\[1\.005\]:hover {
  transform: scale(1.005);
}
.text-purple-500 {
  color: #8b5cf6;
}
.mb-3 {
  margin-bottom: 0.75rem;
}
.drop-shadow-sm {
  filter: drop-shadow(0 1px 1px rgba(0, 0, 0, 0.05));
}
.text-xl {
  font-size: 1.25rem;
}
.font-bold {
  font-weight: 700;
}
.text-gray-800 {
  color: #1f2937;
}
.text-5xl {
  font-size: 3rem;
}
.font-extrabold {
  font-weight: 800;
}
.text-purple-600 {
  color: #7c3aed;
}
.mt-2 {
  margin-top: 0.5rem;
}
.text-green-500 {
  color: #22c55e;
}
.text-green-600 {
  color: #16a34a;
}
.text-red-500 {
  color: #ef4444;
}
.text-red-600 {
  color: #dc2626;
}
.text-teal-500 {
  color: #14b8a6;
}
.text-teal-600 {
  color: #0d9488;
}
.text-orange-500 {
  color: #f97316;
}
.text-orange-600 {
  color: #ea580c;
}
.text-indigo-500 {
  color: #6366f1;
}
.mb-4 {
  margin-bottom: 1rem;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.text-lg {
  font-size: 1.125rem;
}
.italic {
  font-style: italic;
}
.text-gray-700 {
  color: #374151;
}
.text-sm {
  font-size: 0.875rem;
}
.text-gray-500 {
  color: #6b7280;
}
.mt-1 {
  margin-top: 0.25rem;
}
.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  margin-top: 0.5rem;
}
.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.flex-grow {
  flex-grow: 1;
}
.mr-2 {
  margin-right: 0.5rem;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.text-gray-400 {
  color: #9ca3af;
}
.bg-gray-50 {
  background-color: #f9fafb;
}
.p-2 {
  padding: 0.5rem;
}
.rounded-md {
  border-radius: 0.375rem;
}
.border-gray-100 {
  border-color: #f3f4f6;
}
.ml-auto {
  margin-left: auto;
}
.p-1 {
  padding: 0.25rem;
}
.rounded-md {
  border-radius: 0.375rem;
}
.text-sm {
  font-size: 0.875rem;
}
.bg-gray-100 {
  background-color: #f3f4f6;
}
.text-gray-700 {
  color: #374151;
}
.focus\:ring-blue-300:focus {
  --tw-ring-color: rgba(147, 197, 253, 0.5);
} /* blue-300 */
.focus\:border-blue-300:focus {
  border-color: #93c5fd;
} /* blue-300 */
